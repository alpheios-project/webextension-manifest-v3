!function(r,s){if("function"==typeof define&&define.amd)define("webextension-polyfill",["module"],s);else if("undefined"!=typeof exports)s(module);else{var a={exports:{}};s(a),r.browser=a.exports}}("undefined"==typeof globalThis?"undefined"==typeof self?this:self:globalThis,(function(r){"use strict";if("undefined"==typeof browser||Object.getPrototypeOf(browser)!==Object.prototype){if("object"!=typeof chrome||!chrome||!chrome.runtime||!chrome.runtime.id)throw new Error("This script should only be loaded in a browser extension.");r.exports=(r=>{const s={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(0===Object.keys(s).length)throw new Error("api-metadata.json has not been included in browser-polyfill");class c extends WeakMap{constructor(r,s){super(s),this.createItem=r}get(r){return this.has(r)||this.set(r,this.createItem(r)),super.get(r)}}const e=(s,a)=>(...m)=>{r.runtime.lastError?s.reject(r.runtime.lastError):a.singleCallbackArg||1>=m.length&&!1!==a.singleCallbackArg?s.resolve(m[0]):s.resolve(m)},f=r=>1==r?"argument":"arguments",g=(r,s)=>function(a,...m){if(m.length<s.minArgs)throw new Error(`Expected at least ${s.minArgs} ${f(s.minArgs)} for ${r}(), got ${m.length}`);if(m.length>s.maxArgs)throw new Error(`Expected at most ${s.maxArgs} ${f(s.maxArgs)} for ${r}(), got ${m.length}`);return new Promise(((t,A)=>{if(s.fallbackToNoCallback)try{a[r](...m,e({resolve:t,reject:A},s))}catch(A){console.warn(`${r} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,A),a[r](...m),s.fallbackToNoCallback=!1,s.noCallback=!0,t()}else s.noCallback?(a[r](...m),t()):a[r](...m,e({resolve:t,reject:A},s))}))},h=(r,s,a)=>new Proxy(s,{apply:(s,m,t)=>a.call(m,r,...t)});let a=Function.call.bind(Object.prototype.hasOwnProperty);const j=(r,s={},m={})=>{let t=Object.create(null),A={has:(s,a)=>a in r||a in t,get(A,i,l){if(i in t)return t[i];if(!(i in r))return;let x=r[i];if("function"==typeof x)if("function"==typeof s[i])x=h(r,r[i],s[i]);else if(a(m,i)){let s=g(i,m[i]);x=h(r,r[i],s)}else x=x.bind(r);else if("object"==typeof x&&null!==x&&(a(s,i)||a(m,i)))x=j(x,s[i],m[i]);else{if(!a(m,"*"))return Object.defineProperty(t,i,{configurable:!0,enumerable:!0,get:()=>r[i],set(s){r[i]=s}}),x;x=j(x,s[i],m["*"])}return t[i]=x,x},set:(s,a,m,A)=>(a in t?t[a]=m:r[a]=m,!0),defineProperty:(r,s,a)=>Reflect.defineProperty(t,s,a),deleteProperty:(r,s)=>Reflect.deleteProperty(t,s)},i=Object.create(r);return new Proxy(i,A)},k=r=>({addListener(s,a,...m){s.addListener(r.get(a),...m)},hasListener:(s,a)=>s.hasListener(r.get(a)),removeListener(s,a){s.removeListener(r.get(a))}});let m=!1;const t=new c((r=>"function"==typeof r?function(s,a,t){let A,i,l=!1,x=new Promise((r=>{A=function(s){m||(console.warn("Returning a Promise is the preferred way to send a reply from an onMessage/onMessageExternal listener, as the sendResponse will be removed from the specs (See https://developer.mozilla.org/docs/Mozilla/Add-ons/WebExtensions/API/runtime/onMessage)",(new Error).stack),m=!0),l=!0,r(s)}}));try{i=r(s,a,A)}catch(r){i=Promise.reject(r)}const d=!0!==i&&(r=>r&&"object"==typeof r&&"function"==typeof r.then)(i);if(!0!==i&&!d&&!l)return!1;const k=r=>{r.then((r=>{t(r)}),(r=>{let s;s=r&&(r instanceof Error||"string"==typeof r.message)?r.message:"An unexpected error occurred",t({__mozWebExtensionPolyfillReject__:!0,message:s})})).catch((r=>{console.error("Failed to send onMessage rejected reply",r)}))};return k(d?i:x),!0}:r)),n=({reject:s,resolve:a},m)=>{r.runtime.lastError?"The message port closed before a response was received."===r.runtime.lastError.message?a():s(r.runtime.lastError):m&&m.__mozWebExtensionPolyfillReject__?s(new Error(m.message)):a(m)},o=(r,s,a,...m)=>{if(m.length<s.minArgs)throw new Error(`Expected at least ${s.minArgs} ${f(s.minArgs)} for ${r}(), got ${m.length}`);if(m.length>s.maxArgs)throw new Error(`Expected at most ${s.maxArgs} ${f(s.maxArgs)} for ${r}(), got ${m.length}`);return new Promise(((r,s)=>{const t=n.bind(null,{resolve:r,reject:s});m.push(t),a.sendMessage(...m)}))},A={runtime:{onMessage:k(t),onMessageExternal:k(t),sendMessage:o.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:o.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},i={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return s.privacy={network:{"*":i},services:{"*":i},websites:{"*":i}},j(r,A,s)})(chrome)}else r.exports=browser}));